from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from time import sleep
import itertools as it
import wikipedia
import sys



def get_words():
    terms = []

    with open('terms.txt', encoding="utf8") as f:
        for line in f:
            terms.append(line)

    print("$$ Loaded all terms ({})".format(len(terms)))
    return terms


def get_definitions():
    definitions = []

    with open('definitions.txt', encoding="utf8") as f:
        lines = f.read().split("\n\n")
        for line in lines:
            definitions.append(line)
    
    print("$$ Loaded all definitions ({})".format(len(definitions)))
    return definitions


def define_words(terms):
    definition_file = open('definitions.txt', 'w') 
    definitions = []
    cnt = 1

    for term in terms:
        try:
            print("{} ({} of {})".format(term, cnt, len(terms)))
            definition = wikipedia.summary(wikipedia.search(term)[0])
            definitions.append(definition)
            definition_file.write("{}. {} {}".format(cnt, term, definition))
            definition_file.write("\n")
            definition_file.write("\n")
            cnt += 1
        except Exception as e:
            error = "Error: {}".format(term)
            print(e)
            print(error)
            definitions.append(error)
            definition_file.write(error)

    print("Loaded all definitions")
    return definitions

def createQuizlet(email, password, title, terms, defintions):

    print("$$ Connecting to webdriver...")

    driver = webdriver.Chrome(executable_path='C:\dev\ocr-apush-define/chromedriver.exe')
    driver.get("https://quizlet.com/login")
    assert "Quizlet" in driver.title
    print("$$ Successfully connected to webdriver")

    #   Log in
    print("$$ Logging into Quizlet")

    try:
        driver.find_element_by_css_selector(".UISocialButton.UISocialButton--default").click()
        sleep(3)
        elem = driver.find_element_by_name("identifier")
        elem.clear()
        elem.send_keys(email)
        elem.send_keys(Keys.RETURN)
        sleep(3)
        elem = driver.find_element_by_name("password")
        elem.clear()
        elem.send_keys(password)
        elem.send_keys(Keys.RETURN)
        sleep(3)
        driver.refresh()
        driver.find_element_by_xpath("""//*[@id="SiteHeaderReactTarget"]/header/div/div/span[2]/div/div[2]/a/div""").click()
    except Exception as e:
        print("ERROR: Failed to log into Quizlet!")
    else:
        print("$$ Logged into Quizlet")

    #   Create Quizlet
    print("$$ Creating set...")

    try:
        driver.find_element_by_xpath("""//*[@id="SetPageTarget"]/div/div[1]/div[2]/div/div/label/div/div/div[2]/textarea""").send_keys(title + Keys.TAB)
        driver.find_element_by_xpath("""//*[@id="SetPageTarget"]/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/div/div[3]/div[1]/div/div/div[1]/div/div/label/span/div/button""").click()
        driver.find_element_by_xpath("""//*[@id="react-select-2--option-1"]""").click()
        driver.find_element_by_xpath("""//*[@id="SetPageTarget"]/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/div/div[3]/div[1]/div/div/div[2]/div/div/label/span/div/button""").click()
        driver.find_element_by_xpath("""//*[@id="react-select-3--option-1"]""").click()

        #	Fill in the text
        element = driver.find_element_by_xpath("""//*[@id="SetPageTarget"]/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/div/div[3]/div[1]/div/div/div[1]/div/div/label/div/div[1]/div[2]/textarea""")
        actions = webdriver.ActionChains (driver)
        actions.move_to_element(element)
        actions.click()	
        actions.send_keys("THIS SET WAS GENERATED BY A PYTHON BOT" + Keys.TAB)
        actions.send_keys("Smith is so cool, isn't he?" + Keys.TAB)

        for i in range(0, len(terms)):	
            actions.send_keys(terms[i] + Keys.TAB)
            actions.send_keys(defintions[i] + Keys.TAB)
        actions.perform()
    except Exception as e:
        print("ERROR: Failed to create set!")
        sleep(5)
    else:
        print("$$ Successfully created set")
        sleep(5)

    #	Save
    # print("$$ Saving set...")
    # try:
    #     save = driver.find_element_by_css_selector(".UIButton.UIButton--hero").click
    #     # save.find_element_by_css_selector(".UIButton-wrapper").click()
    # except Exception as e:
    #     print("ERROR: Failed to save set!")
    #     print(e)
    # else:
    #     print("$$ Set saved")
    #     sleep(2)
    #     driver.close() 

def main():
    # email = input("Enter Quizlet email: ")
    # password = input("Enter Quizlet password: ")
    # title = input("Enter title for the set: ")
    email = "241745@amaisd.net"
    password = "20011018"
    title = "APUSH First Sememster Terms"
    terms = get_words()
    definitions = get_definitions()
    createQuizlet(email, password, title, terms, definitions)


if __name__ == "__main__":
    main()